package com.lovcreate.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lovcreate.greendao.model.HomeActivity;
import com.lovcreate.greendao.model.Message;
import com.lovcreate.greendao.model.NotLoginCouponListBean;
import com.lovcreate.greendao.model.SearchHomeHistory;
import com.lovcreate.greendao.model.SearchStationHistory;

import com.lovcreate.greendao.gen.HomeActivityDao;
import com.lovcreate.greendao.gen.MessageDao;
import com.lovcreate.greendao.gen.NotLoginCouponListBeanDao;
import com.lovcreate.greendao.gen.SearchHomeHistoryDao;
import com.lovcreate.greendao.gen.SearchStationHistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig homeActivityDaoConfig;
    private final DaoConfig messageDaoConfig;
    private final DaoConfig notLoginCouponListBeanDaoConfig;
    private final DaoConfig searchHomeHistoryDaoConfig;
    private final DaoConfig searchStationHistoryDaoConfig;

    private final HomeActivityDao homeActivityDao;
    private final MessageDao messageDao;
    private final NotLoginCouponListBeanDao notLoginCouponListBeanDao;
    private final SearchHomeHistoryDao searchHomeHistoryDao;
    private final SearchStationHistoryDao searchStationHistoryDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        homeActivityDaoConfig = daoConfigMap.get(HomeActivityDao.class).clone();
        homeActivityDaoConfig.initIdentityScope(type);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        notLoginCouponListBeanDaoConfig = daoConfigMap.get(NotLoginCouponListBeanDao.class).clone();
        notLoginCouponListBeanDaoConfig.initIdentityScope(type);

        searchHomeHistoryDaoConfig = daoConfigMap.get(SearchHomeHistoryDao.class).clone();
        searchHomeHistoryDaoConfig.initIdentityScope(type);

        searchStationHistoryDaoConfig = daoConfigMap.get(SearchStationHistoryDao.class).clone();
        searchStationHistoryDaoConfig.initIdentityScope(type);

        homeActivityDao = new HomeActivityDao(homeActivityDaoConfig, this);
        messageDao = new MessageDao(messageDaoConfig, this);
        notLoginCouponListBeanDao = new NotLoginCouponListBeanDao(notLoginCouponListBeanDaoConfig, this);
        searchHomeHistoryDao = new SearchHomeHistoryDao(searchHomeHistoryDaoConfig, this);
        searchStationHistoryDao = new SearchStationHistoryDao(searchStationHistoryDaoConfig, this);

        registerDao(HomeActivity.class, homeActivityDao);
        registerDao(Message.class, messageDao);
        registerDao(NotLoginCouponListBean.class, notLoginCouponListBeanDao);
        registerDao(SearchHomeHistory.class, searchHomeHistoryDao);
        registerDao(SearchStationHistory.class, searchStationHistoryDao);
    }
    
    public void clear() {
        homeActivityDaoConfig.clearIdentityScope();
        messageDaoConfig.clearIdentityScope();
        notLoginCouponListBeanDaoConfig.clearIdentityScope();
        searchHomeHistoryDaoConfig.clearIdentityScope();
        searchStationHistoryDaoConfig.clearIdentityScope();
    }

    public HomeActivityDao getHomeActivityDao() {
        return homeActivityDao;
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public NotLoginCouponListBeanDao getNotLoginCouponListBeanDao() {
        return notLoginCouponListBeanDao;
    }

    public SearchHomeHistoryDao getSearchHomeHistoryDao() {
        return searchHomeHistoryDao;
    }

    public SearchStationHistoryDao getSearchStationHistoryDao() {
        return searchStationHistoryDao;
    }

}
